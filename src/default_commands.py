from aiogram import Bot, types
from aiogram.fsm.context import FSMContext
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, BotCommand
from src.registration import check_registered, RegistrationStates
from src.ai_generation import simple_message_to_ai


'''
–ö–æ–º–∞–Ω–¥–∞ /start
'''
async def cmd_start(message: types.Message, state: FSMContext):
    user_id = message.from_user.id
    user_name = check_registered(user_id)
    if user_name:
        await message.answer(f"–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {user_name}!\n\n/menu - –æ—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é –±–æ—Ç–∞")
    else:
        await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –î–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é. –ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç?")
        await state.set_state(RegistrationStates.waiting_for_name)


'''
–ö–æ–º–∞–Ω–¥–∞ /menu
'''
async def cmd_menu(message: types.Message):
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="–°–æ–∑–¥–∞—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É üèãÔ∏è‚Äç‚ôÇÔ∏è"), KeyboardButton(text="–ú–æ–π –ø–ª–∞–Ω üìã")],
            [KeyboardButton(text="–£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è üìö"), KeyboardButton(text="–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è ‚è∞")],
            [KeyboardButton(text="–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å üë§"), KeyboardButton(text="–ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ üìà")]
        ],
        resize_keyboard=True
    )
    await message.answer("–ú–µ–Ω—é –æ—Ç–∫—Ä—ã—Ç–æ", reply_markup=keyboard)


# –†—É—á–∫–∞ –¥–ª—è –∫–Ω–æ–ø–æ–∫ (–ø–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –∑–∞—Ç—ã—á–∫–∞)
async def handle_button_click(message: types.Message):
    text = message.text
    if text in ("–ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ üìà", "–ú–æ–π –ø–ª–∞–Ω üìã"):
        await message.answer(text)
        return

    await message.answer(simple_message_to_ai(text))

async def set_bot_commands(bot: Bot):
    commands = [
        BotCommand(command="start", description="–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º"),
        BotCommand(command="menu", description="–û—Ç–∫—Ä—ã—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"),
    ]
    await bot.set_my_commands(commands)